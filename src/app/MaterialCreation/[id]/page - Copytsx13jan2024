'use client';

import 'bootstrap/dist/css/bootstrap.min.css';
import { usePathname } from 'next/navigation'
import React, { useEffect, useState } from 'react';
import DefaultLayout from "@/components/Layouts/DefaultLayout";
import { Modal, Button, Alert } from 'react-bootstrap';

import { useAuth } from "@/app/context/AuthContext";
import { useRouter } from 'next/navigation';
import { m } from 'framer-motion';

let Token = process.env.BACKEND_TOKEN;
const MaterialCreationDetail = () => {  
  const pathname = usePathname()
  const id = pathname.match(/\/MaterialCreation\/(\d+)/)?.[1];

  const router = useRouter();
  const { token, logout } = useAuth(); 

  const [showModal, setShowModal] = useState(false);
  const [showAlert, setShowAlert] = useState(false);

  const handleOpenModal = () => setShowModal(true);
  const handleCloseModal = () => setShowModal(false);
  const [isTextboxVisible, setTextboxVisible] = useState(false);
  const [dropdownProduct, SetdropdownProduct] = useState<any[]>([]);

  const handleArrowClick = (event:any) => {    
    setTextboxVisible(!isTextboxVisible);     
  }
  const [MaterialCreations, setMaterialCreations] = useState<any[]>([
    {
      MaterialCreationNo: "",
      Description:"",
      Sku: "",
      ProductName: "",
      BatchNo: "",
      QtyTaken: "",
      MrpTaken: 0,
      UnitCostTaken: 0,
      LandingPriceTaken: 0,
      SalesRateTaken: 0,
      TaxRateTaken: 0,
      TotalTaken: 0,
    },
  ]);
// const [MaterialCreations, setMaterialCreations] = useState<any>({
//   Id: '',
//   Sku: '',
//   ProductName: '',
//   BatchNo: '',
//   MaterialCreationNo:'',
//   Description:'',
//   QtyTaken: '',
//   MrpTaken:'',
//   UnitCostTaken:'',
//   LandingPriceTaken: '',
//   SalesRateTaken: '',
//   TaxRateTaken: '',
//   TotalTaken:'',
//   QtyReceived: '',
//   MrpReceived:'',
//   UnitCostReceived: '',
//   LandingPriceReceived: '',
//   SalesRateReceived: '',
//   TaxRateReceived: '',
//   TotalReceived: '',
//   Created_at: Date,
//   Updated_at: Date,
//   });

  const [isLoading, setIsLoading] = useState(true);
  const [itemCode, setItemCode] = useState('');
  const [autoGenerate, setAutoGenerate] = useState(false);
  const [productName, setProductName] = useState('');
  const [printName, setPrintName] = useState('');
  const [searchQuery, setSearchQuery] = useState<string>(""); // Search query state
  
  //const handleInputChange = (e:any) => setItemCode(e.target.value);
  const handleCheckboxChange = (e:any) => setAutoGenerate(e.target.checked);

 //  Handle input change
  //  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {
  //   const { name, value } = e.target;
  //   setMaterialCreations((prevProduct: any) => ({
  //     ...prevProduct,  // Spread the previous state
  //     [name]: value   // Update the specific field
  //   }));
  // };
  const handleInputChange = (index: number, field: string, value: string | number) => {
    const updatedMaterialCreations = [...MaterialCreations];
    updatedMaterialCreations[index][field] = value;
    setMaterialCreations(updatedMaterialCreations);
  };

  const handleSearchChange = (event: React.ChangeEvent<HTMLInputElement>) => {
    const query = event.target.value; // Capture the search input value
    setSearchQuery(query); // Update the searchQuery state
    fetchProducts(query); // Fetch categories with the updated search query and reset to page 0
  };
  // const isQueryLongerThan3 = (query: string): boolean => {
  //   return query.length > 3;
  // };
  
  const fetchProducts = async (query: string) => {
    try {
    //  SetdropdownProduct([]);
      console.log("Search query product: " + JSON.stringify(query));          
      const url = `${process.env.NEXT_PUBLIC_API_HOST}/api-backend/Product/GetAll?pageIndex=0&pageSize=10&storeId=0&vendorId=0
      &warehouseId=0&visibleIndividuallyOnly=false&excludeFeaturedProducts=false&productTagId=0&
      keywords=${query}&searchDescriptions=false&searchManufacturerPartNumber
      =true&searchSku=true&searchProductTags=false&languageId=0&showHidden=false`;
    
      const response = await fetch(url,
        {
        method: 'GET',
        headers: {
          'Content-Type': 'application/json',
          accept: 'application/json',
          Authorization: token ? `Bearer ${token}` : '',
        },
      });  
      if (!response.ok) {
        throw new Error(`Error in search product: ${response.statusText}`);
      }  
      const data = await response.json();
      console.log("Search product data: " + JSON.stringify(data));

      SetdropdownProduct(
        Array.isArray(data.items)
          ? data.items.map((product: any) => ({
              name: product.name,
              sku: product.sku,
            }))
          : []
      );

      return data;
    
    } catch (error) {
      console.log("Error in product search: " + error);
    }
  };
  
  useEffect(() => {
    console.log("dropdownProduct"+  JSON.stringify(dropdownProduct));
  }, [dropdownProduct]);

const updateMaterialCreation = async (materialcreation: any) => {
  try {     
    // handleOpenModal();
    console.log("Before updated material creation Data"+  JSON.stringify(materialcreation)); 
    const response = await fetch(`${process.env.NEXT_PUBLIC_API_HOST}/api-backend/Product/EditMaterialCreationDetailsById`, {
      method: 'PUT',
      headers: {        
        'Content-Type': 'application/json',   
        accept: 'application/json',
        Authorization:token ? `Bearer ${token}` : '',        
      },        
      body: JSON.stringify(materialcreation),
    });    
    if (!response.ok) {
      throw new Error(`Error: ${response.statusText}`);
    }
    const data = await response.json();
    console.log("updated data material creation"+data);
    return data; 
  } 
  catch (error) 
  { }
  finally {    
  }  
};
 
useEffect(() => {
  const fetchMaterialCreations = async () => {
    setIsLoading(true); // Ensure loading state is set before fetching.    
    try {
      const response = await fetch(
        `${process.env.NEXT_PUBLIC_API_HOST}/api-backend/Product/GetMaterialCreationDetailsById?Id=${id}`,
        {
          method: 'GET',
          headers: {
            'Content-Type': 'application/json',
            Accept: 'application/json',
            Authorization: token ? `Bearer ${token}` : '',
          },
        }
      );
      if (!response.ok) {
        throw new Error(`HTTP error! Status: ${response.status} - ${response.statusText}`);
      }
      const data = await response.json();
      console.log("Fetched Material Creations Data:", data);
      setMaterialCreations(data);      
    } catch (error) {
      console.error("Failed to fetch Material Creations:", error || error);
    } finally {
      setIsLoading(false); // Always set loading to false after the fetch is complete.
    }
  };
  fetchMaterialCreations();  
}, [id, token]); // Adding `id` and `token` to the dependency array.

 useEffect(() => {
   console.log("MaterialCreations"+  JSON.stringify(MaterialCreations));
 },[MaterialCreations]);    


  const  handleUpdate = async () => {
    try 
    {      
      const response = await updateMaterialCreation(MaterialCreations);     
    } 
    catch (error) 
    {
      console.error('Error updating product:', error);
    }
  }
  const AddRowblankRaw = () => {
    // Define your function logic here
    console.log('Add row function triggered');
  };

  const getItemCodeDataRaw = (index:any) => {
    console.log(`Get item code data for index ${index}`);
  };

  const getProductDataRaw = (index:any) => {
    console.log(`Get product data for index ${index}`);
  };

  const RawBatchChange = (index:any) => {
    console.log(`Batch changed for index ${index}`);
  };

  const setAmountRaw = (index:any) => {
    console.log(`Set amount for index ${index}`);
  };

  if (isLoading) return (
    <DefaultLayout>
       <div>Loading...</div></DefaultLayout>);
  return (
    
    <DefaultLayout>
  <div className="form-container">
  <div className="row">
  <div className="col-lg-12 col-md-12 col-sm-12">    
    <div className="m-portlet">
      <div className="m-portlet__head m-portlet__head__sm">
        <div className="m-portlet__head-caption">
          <div className="m-portlet__head-title"></div>
        </div>
        <div className="m-portlet__head-tools">          
        </div>
      </div>
      <div className="m-portlet__body card-body-sm">
        <div className="row">
          <div className="col-md-2">
            <div className="form-group row">
              <label className="col-lg-12 col-md-12 col-sm-12">
                Material Creation Date
              </label>
              <div className="col-lg-12 col-md-12 col-sm-12">
                <div className="input-group date">
                  <input
                    type="text"
                    className="form-control form-control-sm todaybtn-datepicker"
                    name="materialCreationDate"
                    readOnly
                    data-date-format="dd/mm/yyyy"
                    data-date-start-date="01/04/2024"
                    data-date-end-date="31/03/2025"
                    value="09/01/2025"
                  />
                </div>
                <small
                  className="help-block"
                  style={{ display: "none" }}
                >
                  The Date is required
                </small>
              </div>
            </div>
          </div>
          <div className="col-md-2">
            <div className="form-group row">
              <label className="col-lg-12 col-md-12 col-sm-12">
                Material Creation No.
              </label>
              <div className="col-lg-6 col-6">
                <input
                  type="text"
                  readOnly
                  className="form-control form-control-sm"
                  name="MaterialCreationNo"
                />                              
              </div>              
            </div>
          </div>
          <div className="col-md-2">
            <div className="form-group row">
              <label className="col-lg-12 col-md-12 col-sm-12">Description</label>
              <div className="col-lg-12 col-12">
                <textarea
                  className="form-control form-control-sm"
                  name="Description"
                  rows={1}
                  placeholder="Enter Description"                  
                  readOnly
                ></textarea>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
    {/* End Portlet */}
     {/* Material Taken */}
    <div className="row" id="productdetails-portlet" data-select2-id="productdetails-portlet">
      <div className="col-md-12" data-select2-id="14">
        <div className="table-responsive" data-select2-id="13">
          <table className="table table-sm table-striped table-bordered table-hover" id="raw_product_table" data-select2-id="raw_product_table">
            <thead>
              <tr>
                <th colSpan={12} className="text-center" style={{ backgroundColor: '#686868', color: '#fff' }}>
                  Material Taken
                </th>
              </tr>
              <tr>
                <th style={{ width: '60px' }} className="text-center"></th>
                <th className="text-center" style={{ width: '50px' }}>Sr. No.</th>
                <th>Item Code/Barcode</th>
                <th>Product Name</th>
                <th>Batch No</th>
                <th style={{ width: '100px' }}>
                  Qty<span style={{ fontSize: '1.25rem' }} className="text-danger">*</span>
                </th>
                <th className="text-right">MRP</th>
                <th className="text-right">Unit Cost</th>
                <th className="text-right">Landing Price</th>
                <th className="text-right">Sales Rate</th>
                <th className="text-right">Tax Rate</th>
                <th className="text-right">Total</th>
              </tr>
            </thead>
            <tbody data-raw-list="">
              { 
                  Array.isArray(MaterialCreations) && 
            MaterialCreations.map((row:any, index:any) => (
           <tr key={index} data-raw-item="template">
           <td className="paction text-center">
          <button
            type="button"
            className="btn btn-outline-danger m-btn m-btn--icon m-btn--icon-only m-btn--pill"
            onClick={() => console.log("Remove item clicked")}
          >
            <i className="fa fa-times"></i>
          </button>
          <button
            type="button"
            title="Add New"
            className="btn btn-outline-info m-btn m-btn--icon m-btn--icon-only m-btn--pill"
            onClick={() =>
              setMaterialCreations([
                ...MaterialCreations,
                {
                  Sku: "",
                  ProductName: "",
                  BatchNo: "",
                  QtyTaken: "",
                  MrpTaken: 0,
                  UnitCostTaken: 0,
                  LandingPriceTaken: 0,
                  SalesRateTaken: 0,
                  TaxRateTaken: 0,
                  TotalTaken: 0,
                },
              ])
            }
          >
            <i className="fa fa-plus" aria-hidden="true"></i>
          </button>
        </td>
        <td className="text-center">{index + 1}</td>
        <td style={{ width: "150px" }}>
          <input
            type="text"
            className="form-control form-control-sm"
            placeholder="Sku"
            value={row.Sku}
            onChange={(e) => handleInputChange(index, "Sku", e.target.value)}
          />
        </td>
        <td style={{ width: "150px" }}>
          <input
            type="text"
            className="form-control form-control-sm"
            placeholder="ProductName"
            value={row.ProductName}
            onChange={(e) => handleInputChange(index, "ProductName", e.target.value)}
          />
        </td>
        <td style={{ width: "150px" }}>
          <input
            type="text"
            className="form-control form-control-sm"
            placeholder="BatchNo"
            value={row.BatchNo}
            onChange={(e) => handleInputChange(index, "BatchNo", e.target.value)}
          />
        </td>
        <td style={{ width: "150px" }}>
          <input
            type="text"
            className="form-control form-control-sm"
            placeholder="QtyTaken"
            value={row.QtyTaken}
            onChange={(e) => handleInputChange(index, "QtyTaken", e.target.value)}
          />
        </td>
        <td style={{ width: "150px" }}>
          <label>{row.MrpTaken}</label>
        </td>
        <td style={{ width: "150px" }}>
          <label>{row.UnitCostTaken}</label>
        </td>
        <td style={{ width: "150px" }}>
          <label>{row.LandingPriceTaken}</label>
        </td>
        <td style={{ width: "150px" }}>
          <label>{row.SalesRateTaken}</label>
        </td>
        <td style={{ width: "150px" }}>
          <label>{row.TaxRateTaken}</label>
        </td>
        <td style={{ width: "150px" }}>
          <label>{row.TotalTaken}</label>
        </td>
      </tr>
    ))}
  </tbody>
            <tfoot>
              <tr>
                <th colSpan={11} className="text-center">
                  <input type="hidden" name="rawTotalAmount" id="rawTotalAmount" value="0.00" />
                  Total Amount: <span id="totalAmountRaw">0.00</span>
                </th>
              </tr>
            </tfoot>
          </table>
        </div>
      </div>
    </div>


    {/* Goods Received */}
           
{/*         
    <div className="row" id="productdetails-portlet" data-select2-id="productdetails-portlet">
      <div className="col-md-12" data-select2-id="14">
        <div className="table-responsive" data-select2-id="13">
          <table>
        <thead>
              <tr>
                <th colSpan={11} className="text-center">
                  <input type="hidden" name="rawTotalAmount" id="rawTotalAmount" value="0.00" />
                  Total Amount: <span id="totalAmountRaw">0.00</span>
                </th>
              </tr>
            </thead></table>
          <table className="table table-sm table-striped table-bordered table-hover" id="raw_product_table" data-select2-id="raw_product_table">
            <thead>
              <tr>
                <th colSpan={12} className="text-center" style={{ backgroundColor: '#686868', color: '#fff' }}>
                  Material Taken
                </th>
              </tr>
              <tr>
                <th style={{ width: '60px' }} className="text-center"></th>
                <th className="text-center" style={{ width: '50px' }}>Sr. No.</th>
                <th>Item Code/Barcode</th>
                <th>Product Name</th>
                <th>Batch No</th>
                <th style={{ width: '100px' }}>
                  Qty<span style={{ fontSize: '1.25rem' }} className="text-danger">*</span>
                </th>
                <th className="text-right">MRP</th>
                <th className="text-right">Unit Cost</th>
                <th className="text-right">Landing Price</th>
                <th className="text-right">Sales Rate</th>
                <th className="text-right">Tax Rate</th>
                <th className="text-right">Total</th>
              </tr>
            </thead>
            <tbody data-raw-list="" data-select2-id="12">
              <tr data-raw-item="template" className="m--hide">
                <td className="paction text-center">
                  <button
                    type="button"
                    className="btn btn-outline-danger m-btn m-btn--icon m-btn--icon-only m-btn--pill"
                    onClick={() => console.log('Remove item clicked')}
                  >
                    <i className="fa fa-times"></i>
                  </button>
                  <button
                    type="button"
                    title="Add New"
                    className="btn btn-outline-info m-btn m-btn--icon m-btn--icon-only m-btn--pill"
                    onClick={AddRowblankRaw}
                  >
                    <i className="fa fa-plus" aria-hidden="true"></i>
                  </button>
                  <input type="hidden" name="materialCreationRawItemVos[{index}].materialCreationRawItemId" id="raw_materialCreationRawItemId{index}" value="" />
                 
                </td>
                <td className="text-center">
                  <span data-item-index=""></span>
                </td>
                <td style={{ width: '150px' }}>
                  <input
                    type="text"
                    className="form-control form-control-sm"
                    placeholder="Sku"
                    name="materialCreationRawItemVos[{index}].Sku"
                    id="raw_Sku{index}"
                    value={MaterialCreations.Sku}
                    onChange={() => getItemCodeDataRaw('{index}')}
                  />
                </td>

                <td style={{ width: '150px' }}>
                  <input
                    type="text"
                    className="form-control form-control-sm"
                    placeholder="ProductName"
                    name="materialCreationRawItemVos[{index}].ProductName"
                    id="raw_ProductName{index}"
                    value={MaterialCreations.ProductName}
                    onChange={() => getItemCodeDataRaw('{index}')}
                  />
                </td>

                <td style={{ width: '150px' }}>
                  <input
                    type="text"
                    className="form-control form-control-sm"
                    placeholder="BatchNo"
                    name="materialCreationRawItemVos[{index}].BatchNo"
                    id="raw_BatchNo{index}"
                    value={MaterialCreations.BatchNo}
                    onChange={() => getItemCodeDataRaw('{index}')}
                  />
                </td>

                <td style={{ width: '150px' }}>
                  <input
                    type="text"
                    className="form-control form-control-sm"
                    placeholder="QtyReceived"
                    name="materialCreationRawItemVos[{index}].QtyReceived"
                    id="raw_QtyReceived{index}"
                    value={MaterialCreations.QtyReceived}
                    onChange={() => getItemCodeDataRaw('{index}')}
                  />
                </td>

                <td style={{ width: '150px' }}>
                <input
                    type="text"
                    className="form-control form-control-sm"
                    placeholder="MrpReceived"
                    name="materialCreationRawItemVos[{index}].MrpReceived"
                    id="raw_MrpReceived{index}"
                    value={MaterialCreations.MrpReceived}
                    onChange={() => getItemCodeDataRaw('{index}')}
                  />                
                </td>

                <td style={{ width: '150px' }}>
                <input
                    type="text"
                    className="form-control form-control-sm"
                    placeholder="UnitCostReceived"
                    name="materialCreationRawItemVos[{index}].UnitCostReceived"
                    id="raw_UnitCostReceived{index}"
                    value={MaterialCreations.UnitCostReceived}
                    onChange={() => getItemCodeDataRaw('{index}')}
                  />  
                </td>

                <td style={{ width: '150px' }}>
                <input
                    type="text"
                    className="form-control form-control-sm"
                    placeholder="LandingPriceReceived"
                    name="materialCreationRawItemVos[{index}].LandingPriceReceived"
                    id="raw_LandingPriceReceived{index}"
                    value={MaterialCreations.LandingPriceReceived}
                    onChange={() => getItemCodeDataRaw('{index}')}
                  />    
                </td>

                <td style={{ width: '150px' }}>
                <input
                    type="text"
                    className="form-control form-control-sm"
                    placeholder="SalesRateReceived"
                    name="materialCreationRawItemVos[{index}].SalesRateReceived"
                    id="raw_SalesRateReceived{index}"
                    value={MaterialCreations.SalesRateReceived}
                    onChange={() => getItemCodeDataRaw('{index}')}
                  />    
                </td>

                <td style={{ width: '150px' }}>
                     <label>{MaterialCreations.TaxRateReceived}</label>   
                </td>

                <td style={{ width: '150px' }}>
                     <label>{MaterialCreations.TotalReceived}</label>   
                </td>
                               
              </tr>
            </tbody>
          </table>
        </div>
      </div>
    </div> */}


     

    <div className="row">
                                <div className="col-md-12 text-right">
                                     <a href="/MaterialCreation/" id="cancel_MaterialCreation" className="btn btn-sm btn-secondary">
                                        Cancel
                                     </a>
                                     <button 
                                              type="button" 
                                              className="btn btn-sm btn-brand" 
                                              id="save_MaterialCreation" 
                                              onClick={handleUpdate}
                                      >
                                        Save
                                     </button>
                               </div>
        </div>



       






  </div>
</div>
     
</div>
      <Modal show={showModal} onHide={handleCloseModal}>
        <Modal.Header closeButton>
          {/* <Modal.Title>Alert in Modal</Modal.Title> */}
        </Modal.Header>
        <Modal.Body>
          {showAlert && (
            <Alert variant="danger" onClose={() => setShowAlert(false)} dismissible>
              {/* Product Updated Successfully ! */}
            </Alert>
          )}          Bank Details Successfully !
        </Modal.Body>
        <Modal.Footer>
          <Button variant="secondary" onClick={handleCloseModal}>
            Close
          </Button>      
        </Modal.Footer>
      </Modal>                    

    </DefaultLayout>
  )
};
export default MaterialCreationDetail;
