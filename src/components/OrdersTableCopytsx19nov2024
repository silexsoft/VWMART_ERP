'use client';

import React, { useEffect, useState } from 'react';
import { useRouter } from 'next/navigation';

interface order {
    id: string;
    order_status_id: string;
    payment_status_id: string;
    order_total: string;
    created_on_utc: string;
  }

  const orderStatusMap: Record<number, string> = {
    10: "Packing Pending",
    12: "Invoicing Pending",
    15: "Pickup Pending",
    20: "In Transit",
    30: "Completed",
    40: "Cancelled"
  };
  
  const paymentStatusMap: Record<number, string> = {
    10: "Pending",
    20: "Authorized",
    30: "Paid",
    35: "PartiallyRefunded",
    40: "Refunded",
    50: "Voided"
  };

interface OrdersTableProps {
    orders: order[];
  }

const OrdersTable: React.FC<OrdersTableProps> = ({ orders }) => {
    const router = useRouter();
  
    
    if (!orders) {
      return <div>Loading...</div>; // Change "wait" to a more descriptive message
    }
  
    return (
      <div className="rounded-sm border border-stroke bg-white shadow-default dark:border-strokedark dark:bg-boxdark">
        <div className="px-4 py-6 md:px-6 xl:px-7.5">
          <h4 className="text-xl font-semibold text-black dark:text-white">
            All Orders
          </h4>
        </div>
  
        <div className="grid grid-cols-6 border-t border-stroke px-4 py-4.5 dark:border-strokedark sm:grid-cols-8 md:px-6 2xl:px-7.5">
          <div className="col-span-1 flex items-center">
            <p className="font-medium">Order #</p>
          </div>
          <div className="col-span-1 hidden items-center sm:flex">
            <p className="font-medium">Order status</p>
          </div>
          <div className="col-span-1 flex items-center">
            <p className="font-medium">Payment status</p>
          </div>
          <div className="col-span-2 flex items-center">
            <p className="font-medium">Created on</p>
          </div>
          <div className="col-span-2 flex items-center">
            <p className="font-medium">Order total</p>
          </div>
          <div className="col-span-1 flex items-center">
            <p className="font-medium">Action</p>
          </div>
        </div>
  
        {orders.map((order, key) => (
          <div
            className="grid grid-cols-6 border-t border-stroke px-4 py-4.5 dark:border-strokedark sm:grid-cols-8 md:px-6 2xl:px-7.5"
            key={key}
          >
            <div className="col-span-1 flex items-center">
              <div className="flex flex-col gap-4 sm:flex-row sm:items-center">
                
                <p className="text-sm text-black dark:text-white">
                  {order.id}
                </p>
              </div>
            </div>
            <div className="col-span-1 hidden items-center sm:flex">
              <p className="text-sm text-black dark:text-white">
              {order && order.order_status_id ? orderStatusMap[Number(order.order_status_id)] || "Unknown Status" : "Unknown Status"}
              </p>
            </div>
            <div className="col-span-1 flex items-center">
              <p className="text-sm text-black dark:text-white">
                {order && order.payment_status_id ? paymentStatusMap[Number(order.payment_status_id)] || "Unknown Status" : "Unknown Status"}
              </p>
            </div>
            <div className="col-span-2 flex items-center">
              <p className="text-sm text-black dark:text-white">
                    {new Date(order.created_on_utc).toLocaleString("en-US", {
                            year: "numeric",
                            month: "2-digit",
                            day: "2-digit",
                            hour: "2-digit",
                            minute: "2-digit",
                            second: "2-digit",
                    })}              
              </p>
            </div>
            <div className="col-span-2 flex items-center">
              <p className="text-sm text-black dark:text-white">
              {order.order_total}              
              </p>
            </div>
            <div className="col-span-1 flex items-center">
              <p className="text-sm text-meta-3">
              <button 
                     onClick={() => router.push(`/Orders/${order.id}`)} 
                    className="text-blue-500 hover:underline"
                  >
                    Edit
                  </button>
              </p>
            </div>
          </div>
        ))}
      </div>
    );
  
  };
  

  export default OrdersTable;